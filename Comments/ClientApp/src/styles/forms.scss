////
/// @group components
////

// sass-lint:disable class-name-format

@use 'sass:math';
@use "@nice-digital/nds-core/scss/colours";
@use "@nice-digital/nds-core/scss/spacing";
@use "@nice-digital/nds-core/scss/typography";
@use "@nice-digital/nds-core/scss/layout";
@use "@nice-digital/nds-core/scss/utils";
@use "variables" as *;

$radio-base-size: 32px;
$colour-border-focus: colours.$focus;

.form {
  &__fieldset {
    border: utils.rem(spacing.$xx-small) solid colours.$border;
    margin-bottom: utils.rem(spacing.$medium);
    padding: utils.rem(spacing.$small);
  }

  &__legend {
    @include typography.font-size(h3);
    font-weight: bold;
    margin-bottom: utils.rem(spacing.$small);
  }

  &__group {
    margin-bottom: utils.rem(spacing.$medium);

    &--error {
      .form__input,
      .form__radio,
      .form__checkbox {
        background-color: colours.$error-background;
        border-color: $ec-white;
        outline: colours.$error utils.rem(spacing.$x-small) solid;
      }

      .form__label {
        color: colours.$error;
        font-weight: bold;
      }

      .form__hint {
        color: colours.$error;
      }
    }

    &--radio {
      @include layout.clearfix;
      clear: left;
      display: block;
      padding-left: $radio-base-size * 1.4;
      position: relative;
    }

    &--inline {
      display: inline-block;
      margin-right: utils.rem(spacing.$medium);

      input {
        margin-right: utils.rem(spacing.$x-small);
      }
    }

    &--stacked {
      margin-bottom: utils.rem(spacing.$small);
    }
  }

  &__input {
    border: utils.rem(spacing.$xx-small) solid colours.$border;
    padding: utils.rem(spacing.$small);
    width: 100%;

    &:focus {
      outline: $colour-border-focus utils.rem(spacing.$x-small) solid;
    }

    //@include mq($from: sm) {
    //  width: utils.rem($nice-breakpoint-xs);
    //}

    &--file,
    &--range {
      border: 0;
      padding: 0;
    }

    &--textarea {
      height: 8em; // default textarea 8 characters tall
    }
  }

  &__radio {
    cursor: pointer;
    height: $radio-base-size;
    left: 0;
    margin: 0;
    opacity: 0;
    position: absolute;
    top: 0;
    width: $radio-base-size;

    &:checked + label:after { // sass-lint:disable-line force-pseudo-nesting pseudo-element
      opacity: 1;
      color: white;
    }

    &:focus {
      & + label:before { // sass-lint:disable-line force-pseudo-nesting pseudo-element
        box-shadow: 0 0 0 math.div($radio-base-size, 16) $colour-border-focus;
      }

    }
  }

  &__label {
    @include typography.font-size(p);
    display: block;
    margin-bottom: utils.rem(spacing.$x-small);

    &--radio {
      cursor: pointer;
      padding: math.div($radio-base-size, 8) 0;

      // radio - outside circle
      &::before {
        border: math.div($radio-base-size, 16) solid $ec-black;
        border-radius: 50%;
        content: '';
        height: $radio-base-size;
        left: 0;
        position: absolute;
        top: 0;
        width: $radio-base-size;
      }

      // radio - center dot
      &::after {
        background: $ec-black;
        border-radius: 50%;
        content: '';
        height: math.div($radio-base-size, 2);
        left: math.div($radio-base-size, 4);
        opacity: 0;
        position: absolute;
        top: math.div($radio-base-size, 4);
        width: math.div($radio-base-size, 2);
      }

      &--inverted {
        &::before {
          border: math.div($radio-base-size, 16) solid $ec-white;
        }
        &::after {
          background: $ec-white;
        }
      }
    }
  }

  &__hint {
    color: $ec-dark-grey;
    margin-top: utils.rem(spacing.$x-small);
    &--inverse {
      color: $ec-white;
    }
  }

}

$checkbox-size: 32px;

.checkbox {
  @include typography.font-size(p);
  display: block;
  position: relative;
  min-height: $checkbox-size;
  margin-bottom: utils.rem(spacing.$medium);
  padding-left: $checkbox-size * 1.4;

  &--error .checkbox__label,
  &--error .checkbox__label {
    color: colours.$error;
    &:before {
      outline: colours.$error utils.rem(spacing.$x-small) solid;
    }
  }

  &--inline {
    display: inline-block;
    margin-right: utils.rem(spacing.$medium);

    input {
      margin-right: utils.rem(spacing.$x-small);
    }
  }

  &:last-child,
  &:last-of-type {
    margin-bottom: 0;
  }

  &__input {
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;
    width: $checkbox-size;
    height: $checkbox-size;
    cursor: pointer;
    opacity: 0;

    &:focus + .checkbox__label:before {
      outline: 3px solid transparent;
      outline-offset: 3px;
      box-shadow: 0 0 0 3px $colour-border-focus;
    }

    &:checked + .checkbox__label:after {
      opacity: 1;
    }

    &:disabled {
      cursor: default;

      & + .checkbox__label {
        cursor: default;
        opacity: .5;
      }
    }
  }

  &__label { // stylelint-disable-line
    font-size: 1rem;
    line-height: 1.5rem;
    font-weight: bold;
    display: block;
    margin-bottom: utils.rem(spacing.$x-small);
    cursor: pointer;
    padding: math.div($checkbox-size, 8) 0;

    &:before { // stylelint-disable-line
      content: "";
      box-sizing: border-box;
      position: absolute;
      top: 0;
      left: 0;
      width: $checkbox-size;
      height: $checkbox-size;
      border: 2px solid $ec-black;
      background: transparent;
    }

    &:after { // stylelint-disable-line
      content: "";
      position: absolute;
      top: math.div($checkbox-size, 3.2);
      left: math.div($checkbox-size, 4);
      width: math.div($checkbox-size, 2);
      height: math.div($checkbox-size, 3.2);
      transform: rotate(-45deg);
      border: solid;
      border-width: 0 0 4px 4px;
      border-top-color: transparent;
      opacity: 0;
      background: transparent;
    }
  }
}
