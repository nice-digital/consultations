# See https://github.com/SeleniumHQ/docker-selenium#via-docker-compose
version: "3.8"
services:
  firefox:
    container_name: functional-tests_firefox_1
    image: selenium/node-firefox:latest
    # See https://github.com/SeleniumHQ/docker-selenium#running-the-images
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - hub
    environment:
      HUB_HOST: hub

  chrome:
    container_name: functional-tests_chrome_1
    image: selenium/node-chrome:latest
    shm_size: '1gb'
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - hub
    environment:
      - SE_EVENT_BUS_HOST=hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - VNC_NO_PASSWORD=1
      - SE_NODE_GRID_URL=http://localhost:4444
    ports:
      - "5900"

  # Selenium Grid/Hub
  hub:
    image: selenium/hub:nightly
    container_name: selenium_hub
    environment:
      GRID_DEBUG: "true"
      GRID_MAX_SESSION: 2
    ports:
      - "4442:4442"
      - "4443:4443"
      - "4444:4444"

  # The tests themselves
  tests:
    container_name: functional-tests_tests_1
    build: .
    volumes:
      - ./:/tests
      - /tests/node_modules
      - ./errorShots:/tests/errorShots
    links:
      - hub
      - nginx
      - comments
    environment:
      - TEAMCITY_VERSION
      - ACCOUNTS_EMAIL
      - ACCOUNTS_EMAIL2
      - ACCOUNTS_EMAIL3
      - ACCOUNTS_EMAIL4
      - ACCOUNTS_PASSWORD
      - IDAM_EMAIL1
      - IDAM_EMAIL2
      - IDAM_EMAIL3
      - IDAM_EMAIL4
      - IDAM_EMAIL5
      - IDAM_EMAIL6
      - IDAM_EMAIL7
      - IDAM_EMAIL8
      - IDAM_EMAIL9
      - IDAM_EMAIL10
      - IDAM_EMAIL11
      - IDAM_EMAIL12
      - IDAM_EMAIL13
      - IDAM_EMAIL14
      - IDAM_EMAIL15
      - IDAM_PASSWORD
      - BROWSERSTACK_ACCESS_KEY
      - BROWSERSTACK_USERNAME
      - BUILD_NUMBER
      - CODE_EMAIL1
      - AUTH_ADMIN_ID

  # Comment Collection dotnet core web app
  comments:
    container_name: functional-tests_comments_1
    build: ./../Comments/
    links:
      - database
      - redis
      - api
    # Enable browsing from the host machine on http://localhost:8080/consultations
    ports:
      - 8080:8080
    environment:
      - DEFAULT_CONNECTION
      - LOGGING_LOG_FILE_PATH=logs/Serilog-{Date}.json
      - APPSETTINGS_ENVIRONMENT_NAME=DockerTests
      - APPSETTINGS_ENVIRONMENT_SECURESITE=false
      - APPSETTINGS_ENVIRONMENT_REALM=niceorg
      - INDEV_APIKEY
      - INDEV_BASEPATH
      - INDEV_PUBLISHED_CHAPTER
      - INDEV_DRAFT_PREVIEW_CHAPTER
      - INDEV_PUBLISHED_DETAIL
      - INDEV_DRAFT_PREVIEW_DETAIL
      - INDEV_PUBLISHED_PREVIEW_DETAIL
      - INDEV_LIST
      - GILLIAM_CLIENT_CERTIFICATE_BASE64
      - GILLIAM_BASE_PATH
      - GILLIAM_GET_CLAIMS_URL
      - GILLIAM_REALM
      - ENCRYPTION_KEY
      - ENCRYPTION_IV
      - ACCOUNTS_ENVIRONMENT
      - REACT_APP_ACCOUNTS_ENVIRONMENT
      - REACT_APP_GLOBAL_NAV_SCRIPT
      - REACT_APP_GLOBAL_NAV_SCRIPT_IE8
      - WEBAPP_DOMAIN
      - WEBAPP_CLIENTID
      - WEBAPP_CLIENTSECRECT
      - WEBAPP_REDIRECT_URI
      - WEBAPP_LOGOUT_REDIRECT_URI
      - WEBAPP_API_IDENTIFIER
      - WEBAPP_AUTH_SERVICE_URI
      - WEBAPP_GOOGLE_TRACKING_ID
      - ADMINROLE
      - TEAMROLES
      - TEAMROLES1
      - TEAMROLES2
      - TEAMROLES3
      - ORG_COMMENTING
      - CODE_EMAIL1
      - REDIS_CONNECTION_STRING
      - INDEV_IDAM_CONFIG_APIIDENTIFIER
      - INDEV_IDAM_CONFIG_CLIENTID
      - INDEV_IDAM_CONFIG_CLIENTSECRET
      - INDEV_IDAM_CONFIG_DOMAIN
      - AUTH_ADMIN_ID
      # MS SQL Server database
  database:
    container_name: functional-tests_database_1
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_PID=Express
      - SA_PASSWORD=ABcd1234#
      - SA_USERNAME=sa
      - COMPOSE_HTTP_TIMEOUT=1000
    ports:
      - 1434:1433

  nginx:
    container_name: functional-tests_nginx_1
    image: nginx:latest
    volumes:
      - ./docker_ssl_proxy:/etc/nginx
    ports:
      - 80:80
      - 443:443
    links:
      - comments
    networks:
      default:
        aliases:
          - niceorg

  redis:
    container_name: functional-tests_redis_1
    image: "redis:alpine3.15"
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    #command: redis-server --requirepass sOmE_sEcUrE_pAsS
    ports:
      - "6379:6379"
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    #command: ["redis-server", "--bind", "redis", "--port", "6379"]


    #JSON Server for Indev Api
  api:
    container_name: functional-tests_api_1
    build: ./../Indev.MockApi/
    ports:
      - 8090:8090
    environment:
      - HTTP_PORT
    volumes:
      - ./../Indev.MockApi:/data
      - /data/node_modules
    command: npm start
    networks:
      default:
        aliases:
          - api
